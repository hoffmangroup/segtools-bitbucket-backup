{"rendered": {"description": {"raw": "I've noticed that computing the overall mean and variance from the label-wise means and variances computed by segtools-signal-distribution often produces slightly different results depending on the input annotation, even though the overall mean and variance are for the same set of positions.  This appears to be due to numeric issues in calculating the label-wise means and variances.  I'm guessing this instability stems from the fact that we're repeatedly adding small numbers (values from a particular position) to large numbers (the running sum and sum of squares).  \r\n\r\nThis numeric instability is probably not a problem in most situations, but it's causing a problem for me when I'm comparing the residual variance of different annotations.  I got rid of most of the problem simply by converting the data from genomedata to double precision before summing, but it's not ideal.\r\n\r\nLet me know if you think of any way of reducing the instability.  In the meantime, be careful not to overestimate the precision of the numbers from segtools-signal-distribution.", "markup": "markdown", "html": "<p>I've noticed that computing the overall mean and variance from the label-wise means and variances computed by segtools-signal-distribution often produces slightly different results depending on the input annotation, even though the overall mean and variance are for the same set of positions.  This appears to be due to numeric issues in calculating the label-wise means and variances.  I'm guessing this instability stems from the fact that we're repeatedly adding small numbers (values from a particular position) to large numbers (the running sum and sum of squares).  </p>\n<p>This numeric instability is probably not a problem in most situations, but it's causing a problem for me when I'm comparing the residual variance of different annotations.  I got rid of most of the problem simply by converting the data from genomedata to double precision before summing, but it's not ideal.</p>\n<p>Let me know if you think of any way of reducing the instability.  In the meantime, be careful not to overestimate the precision of the numbers from segtools-signal-distribution.</p>", "type": "rendered"}, "title": {"raw": "segtools-signal-distribution is numerically unstable", "markup": "markdown", "html": "<p>segtools-signal-distribution is numerically unstable</p>", "type": "rendered"}}, "type": "pullrequest", "description": "I've noticed that computing the overall mean and variance from the label-wise means and variances computed by segtools-signal-distribution often produces slightly different results depending on the input annotation, even though the overall mean and variance are for the same set of positions.  This appears to be due to numeric issues in calculating the label-wise means and variances.  I'm guessing this instability stems from the fact that we're repeatedly adding small numbers (values from a particular position) to large numbers (the running sum and sum of squares).  \r\n\r\nThis numeric instability is probably not a problem in most situations, but it's causing a problem for me when I'm comparing the residual variance of different annotations.  I got rid of most of the problem simply by converting the data from genomedata to double precision before summing, but it's not ideal.\r\n\r\nLet me know if you think of any way of reducing the instability.  In the meantime, be careful not to overestimate the precision of the numbers from segtools-signal-distribution.", "links": {"decline": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/pullrequests/1/decline"}, "diffstat": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/diffstat/hoffmanlab/segtools:c73b2a3d0849%0D971c23dec83f?from_pullrequest_id=1"}, "commits": {"href": "data/repositories/hoffmanlab/segtools/pullrequests/1/commits.json"}, "self": {"href": "data/repositories/hoffmanlab/segtools/pullrequests/1.json"}, "comments": {"href": "data/repositories/hoffmanlab/segtools/pullrequests/1/comments_page=1.json"}, "merge": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/pullrequests/1/merge"}, "html": {"href": "#!/hoffmanlab/segtools/pull-requests/1"}, "activity": {"href": "data/repositories/hoffmanlab/segtools/pullrequests/1/activity.json"}, "diff": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/diff/hoffmanlab/segtools:c73b2a3d0849%0D971c23dec83f?from_pullrequest_id=1"}, "approve": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/pullrequests/1/approve"}, "statuses": {"href": "data/repositories/hoffmanlab/segtools/pullrequests/1/statuses_page=1.json"}}, "title": "segtools-signal-distribution is numerically unstable", "close_source_branch": true, "reviewers": [{"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}], "id": 1, "destination": {"commit": {"hash": "971c23dec83f", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segtools/commit/971c23dec83f.json"}, "html": {"href": "#!/hoffmanlab/segtools/commits/971c23dec83f"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segtools.json"}, "html": {"href": "#!/hoffmanlab/segtools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{981b7f63-4900-4255-97c0-c244f833a3ee}ts=python"}}, "type": "repository", "name": "segtools", "full_name": "hoffmanlab/segtools", "uuid": "{981b7f63-4900-4255-97c0-c244f833a3ee}"}, "branch": {"name": "signal-distribution_specify-tracknames"}}, "created_on": "2014-04-15T00:10:41.340898+00:00", "summary": {"raw": "I've noticed that computing the overall mean and variance from the label-wise means and variances computed by segtools-signal-distribution often produces slightly different results depending on the input annotation, even though the overall mean and variance are for the same set of positions.  This appears to be due to numeric issues in calculating the label-wise means and variances.  I'm guessing this instability stems from the fact that we're repeatedly adding small numbers (values from a particular position) to large numbers (the running sum and sum of squares).  \r\n\r\nThis numeric instability is probably not a problem in most situations, but it's causing a problem for me when I'm comparing the residual variance of different annotations.  I got rid of most of the problem simply by converting the data from genomedata to double precision before summing, but it's not ideal.\r\n\r\nLet me know if you think of any way of reducing the instability.  In the meantime, be careful not to overestimate the precision of the numbers from segtools-signal-distribution.", "markup": "markdown", "html": "<p>I've noticed that computing the overall mean and variance from the label-wise means and variances computed by segtools-signal-distribution often produces slightly different results depending on the input annotation, even though the overall mean and variance are for the same set of positions.  This appears to be due to numeric issues in calculating the label-wise means and variances.  I'm guessing this instability stems from the fact that we're repeatedly adding small numbers (values from a particular position) to large numbers (the running sum and sum of squares).  </p>\n<p>This numeric instability is probably not a problem in most situations, but it's causing a problem for me when I'm comparing the residual variance of different annotations.  I got rid of most of the problem simply by converting the data from genomedata to double precision before summing, but it's not ideal.</p>\n<p>Let me know if you think of any way of reducing the instability.  In the meantime, be careful not to overestimate the precision of the numbers from segtools-signal-distribution.</p>", "type": "rendered"}, "source": {"commit": {"hash": "c73b2a3d0849", "type": "commit", "links": {"self": {"href": "data/repositories/hoffmanlab/segtools/commit/c73b2a3d0849.json"}, "html": {"href": "#!/hoffmanlab/segtools/commits/c73b2a3d0849"}}}, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segtools.json"}, "html": {"href": "#!/hoffmanlab/segtools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{981b7f63-4900-4255-97c0-c244f833a3ee}ts=python"}}, "type": "repository", "name": "segtools", "full_name": "hoffmanlab/segtools", "uuid": "{981b7f63-4900-4255-97c0-c244f833a3ee}"}, "branch": {"name": "signal-distribution_numerical-precision"}}, "comment_count": 0, "state": "OPEN", "task_count": 0, "participants": [{"role": "REVIEWER", "participated_on": null, "type": "participant", "approved": false, "user": {"display_name": "Michael Hoffman", "uuid": "{ffa8e039-5d4d-4f69-a4ba-ac25cbaf700b}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D"}, "html": {"href": "https://bitbucket.org/%7Bffa8e039-5d4d-4f69-a4ba-ac25cbaf700b%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/6a95e857a02504cbad5fe965c9d9e4bbd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMH-1.png"}}, "nickname": "hoffman", "type": "user", "account_id": "557058:a9657985-692c-405c-995b-4e41cda7ba2b"}}], "reason": "", "updated_on": "2014-04-15T00:10:41.412234+00:00", "author": {"display_name": "mlibbrecht", "uuid": "{5386772a-11f2-40a6-922a-1557e4210ce0}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5386772a-11f2-40a6-922a-1557e4210ce0%7D"}, "html": {"href": "https://bitbucket.org/%7B5386772a-11f2-40a6-922a-1557e4210ce0%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4f04fb35d1668084963524c0e908eac9d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsM-5.png"}}, "nickname": "mlibbrecht", "type": "user", "account_id": "557058:1c71e8bb-defa-4b90-b75b-f9517c35ceb8"}, "merge_commit": null, "closed_by": null}