{"links": {"self": {"href": "data/repositories/hoffmanlab/segtools/issues/47/comments/29814470.json"}, "html": {"href": "#!/hoffmanlab/segtools/issues/47#comment-29814470"}}, "issue": {"links": {"self": {"href": "data/repositories/hoffmanlab/segtools/issues/47.json"}}, "type": "issue", "id": 47, "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segtools.json"}, "html": {"href": "#!/hoffmanlab/segtools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{981b7f63-4900-4255-97c0-c244f833a3ee}ts=python"}}, "type": "repository", "name": "segtools", "full_name": "hoffmanlab/segtools", "uuid": "{981b7f63-4900-4255-97c0-c244f833a3ee}"}, "title": "The GTF parser is too strict and can't read newest gencode human annotations"}, "content": {"raw": "@hoffman We could but then  we have to make sure that the 'gene' rows are not needed in other modules.\nThe solution I proposed does not alter the expected output of the function so I am certain that it won't break other modules depending on the GTF parser.\n\n", "markup": "markdown", "html": "<p>@hoffman We could but then  we have to make sure that the 'gene' rows are not needed in other modules.\nThe solution I proposed does not alter the expected output of the function so I am certain that it won't break other modules depending on the GTF parser.</p>", "type": "rendered"}, "created_on": "2016-08-11T17:06:20.942167+00:00", "user": {"display_name": "Micka\u00ebl Mendez", "uuid": "{3e035b9e-0328-44e8-8622-5c7e9ed060b2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D"}, "html": {"href": "https://bitbucket.org/%7B3e035b9e-0328-44e8-8622-5c7e9ed060b2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1cb7d89dcab61313d21c5ef402c28e11d=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMM-0.png"}}, "nickname": "Mickael Mendez", "type": "user", "account_id": "557058:aae10d90-ba66-49cd-a04d-5392b943760d"}, "updated_on": "2016-08-11T17:07:25.533003+00:00", "type": "issue_comment", "id": 29814470}