{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/hoffmanlab/segtools.json"}, "html": {"href": "#!/hoffmanlab/segtools"}, "avatar": {"href": "data/bytebucket.org/ravatar/{981b7f63-4900-4255-97c0-c244f833a3ee}ts=python"}}, "type": "repository", "name": "segtools", "full_name": "hoffmanlab/segtools", "uuid": "{981b7f63-4900-4255-97c0-c244f833a3ee}"}, "links": {"attachments": {"href": "data/repositories/hoffmanlab/segtools/issues/46/attachments_page=1.json"}, "self": {"href": "data/repositories/hoffmanlab/segtools/issues/46.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/issues/46/watch"}, "comments": {"href": "data/repositories/hoffmanlab/segtools/issues/46/comments_page=1.json"}, "html": {"href": "#!/hoffmanlab/segtools/issues/46/images-output-by-segtools-aggregation-do"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/hoffmanlab/segtools/issues/46/vote"}}, "reporter": {"display_name": "Rachel Chan", "uuid": "{20430f8d-4e6b-48cc-a8d8-c64868bf7e79}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D"}, "html": {"href": "https://bitbucket.org/%7B20430f8d-4e6b-48cc-a8d8-c64868bf7e79%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/4397abec9f84e35f1f235b350984833dd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsRC-1.png"}}, "nickname": "rcwchan", "type": "user", "account_id": "557058:e439e22e-8cfc-4cf1-b090-030d33a0730e"}, "title": "Images output by segtools-aggregation do not display the right-hand side label numbers", "component": null, "votes": 0, "watches": 1, "content": {"raw": " Images output by segtools-aggregation do not display the right-hand side label numbers.\r\n\r\nFrom investigation/testing, it is true that:\r\n\r\n* the labels correctly exist in the dataframe 'data' as 'data$label' and are passed down to the final plotting\r\n* the labels are not being written and then overlapped/overwritten by small margin space\r\n* I have only been able to get all labels to show iff I place all of them on the left hand side (currently)\r\n\r\nCurrently I think the issue is because of (in R/aggregation.R):\r\n\r\n\r\n```\r\n#!R\r\n\r\n435   trellis.raw <- do.call(xyplot, args)\r\n436   \r\n437   trellis <- useOuterStrips(trellis.raw, strip = strip)\r\n438   \r\n439   update(trellis, layout = layout, between = between, scales = scales,\r\n440          par.settings = par.settings)\r\n\r\n```\r\n\r\nthe useOuterStrips function from lattice/latticeExtra. From the useOuterStrips [documentation](http://latticeextra.r-forge.r-project.org/man/useOuterStrips.html):\r\n\r\n\"Try to update a \"trellis\" object so that strips are only shown on the top and left boundaries when printed, instead of in every panel as is usual. This is only meaningful when there are exactly tow conditioning variables.\"\r\n\r\nthe trellis object here, however, contains the entire image/dataframe/all panels, not just a subset (ie, the 0 and 1 labels' panels), so as useOuterStrips says, it only places strips on the top and left boundaries (and not the boundary in between, where we want the rest of the labels).\r\n\r\nSearching for similar examples uniformly shows the same behavior, and thus explains why when num_rows and num_cols are changed accordingly, all labels will show.", "markup": "markdown", "html": "<p>Images output by segtools-aggregation do not display the right-hand side label numbers.</p>\n<p>From investigation/testing, it is true that:</p>\n<ul>\n<li>the labels correctly exist in the dataframe 'data' as 'data$label' and are passed down to the final plotting</li>\n<li>the labels are not being written and then overlapped/overwritten by small margin space</li>\n<li>I have only been able to get all labels to show iff I place all of them on the left hand side (currently)</li>\n</ul>\n<p>Currently I think the issue is because of (in R/aggregation.R):</p>\n<div class=\"codehilite language-r\"><pre><span></span><span class=\"m\">435</span>   trellis.raw <span class=\"o\">&lt;-</span> <span class=\"kp\">do.call</span><span class=\"p\">(</span>xyplot<span class=\"p\">,</span> <span class=\"kp\">args</span><span class=\"p\">)</span>\n<span class=\"m\">436</span>   \n<span class=\"m\">437</span>   trellis <span class=\"o\">&lt;-</span> useOuterStrips<span class=\"p\">(</span>trellis.raw<span class=\"p\">,</span> strip <span class=\"o\">=</span> strip<span class=\"p\">)</span>\n<span class=\"m\">438</span>   \n<span class=\"m\">439</span>   update<span class=\"p\">(</span>trellis<span class=\"p\">,</span> layout <span class=\"o\">=</span> layout<span class=\"p\">,</span> between <span class=\"o\">=</span> between<span class=\"p\">,</span> scales <span class=\"o\">=</span> scales<span class=\"p\">,</span>\n<span class=\"m\">440</span>          par.settings <span class=\"o\">=</span> par.settings<span class=\"p\">)</span>\n</pre></div>\n\n\n<p>the useOuterStrips function from lattice/latticeExtra. From the useOuterStrips <a data-is-external-link=\"true\" href=\"http://latticeextra.r-forge.r-project.org/man/useOuterStrips.html\" rel=\"nofollow\">documentation</a>:</p>\n<p>\"Try to update a \"trellis\" object so that strips are only shown on the top and left boundaries when printed, instead of in every panel as is usual. This is only meaningful when there are exactly tow conditioning variables.\"</p>\n<p>the trellis object here, however, contains the entire image/dataframe/all panels, not just a subset (ie, the 0 and 1 labels' panels), so as useOuterStrips says, it only places strips on the top and left boundaries (and not the boundary in between, where we want the rest of the labels).</p>\n<p>Searching for similar examples uniformly shows the same behavior, and thus explains why when num_rows and num_cols are changed accordingly, all labels will show.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2016-08-08T22:55:44.933584+00:00", "milestone": null, "updated_on": "2016-08-08T22:57:07.224950+00:00", "type": "issue", "id": 46}